name: CI

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint
  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run tests
        run: tox -e unit
  build-jenkins-agent-image:
    name: Build jenkins agent image
    runs-on: ubuntu-22.04
    outputs:
      image-id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build_oci_image
        id: build
        with:
          dockerfile: jenkins-agent.Dockerfile
          resource-name: jenkins-agent-image
  integration-test-microk8s:
    name: Integration tests (microk8s)
    runs-on: ubuntu-22.04
    # needs: [build-jenkins-agent-image, lint, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup jenkins
        run: |
          echo installing and initializing juju
          sudo snap install juju --classic
          sudo adduser $USER lxd
          newgrp lxd
          sudo lxd init --auto
          sg lxd -c "juju bootstrap --debug localhost lxd"
          echo Installing selinium for Jenkins configuration
          wget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz
          tar xvfz geckodriver-v0.19.1-linux64.tar.gz
          mv geckodriver ~/.local/bin
          pip3 install selenium yaml
          echo Deploying jenkins
          sg lxd -c "python3 tests/integration/deploy_jenkins.py"
      - name: Checking if output works
        run: |
          echo ${{ steps.vars.outputs.controller_name }}
          echo ${{ steps.vars.outputs.model_name }}
          echo ${{ steps.vars.outputs.unit_number }}
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
      - name: Enable microk8s registry
        run: sudo microk8s.enable registry
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Push jenkins-agent image to microk8s registry
        run: |
          imageId=$(docker load --input jenkins-agent-image/jenkins-agent-image.tar | sed -e "s/^Loaded image ID: //")
          docker tag $imageId localhost:32000/jenkins-agent:latest
          docker push localhost:32000/jenkins-agent:latest
      - name: Run integration tests
        run: tox -e integration -- --jenkins-agent-image localhost:32000/jenkins-agent:latest
      - name: Dump logs
        uses: canonical/charm-logdump-action@main
        if: failure()
        with:
          app: indico
          model: testing
