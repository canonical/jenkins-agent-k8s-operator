name: CI

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint
  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run tests
        run: tox -e unit
  build-jenkins-agent-image:
    name: Build jenkins agent image
    runs-on: ubuntu-22.04
    outputs:
      image-id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build_oci_image
        id: build
        with:
          dockerfile: jenkins-agent.Dockerfile
          resource-name: jenkins-agent-image
  integration-test-lxd-microk8s:
    name: Integration tests (lxd and microk8s)
    # [20220824] charmed-kubernetes/actions-operator@main does not work on
    # ubuntu-22.04, hence using 20.04
    runs-on: ubuntu-20.04
    needs: [build-jenkins-agent-image, lint, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
      - name: Setup jenkins
        id: jenkins
        run: |
          echo Installing selinium for Jenkins configuration
          wget https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz
          tar xvfz geckodriver-v0.19.1-linux64.tar.gz
          mv geckodriver ~/.local/bin
          pip3 install selenium pyyaml
          echo Deploying jenkins
          python3 tests/integration/deploy_jenkins.py
          echo Setting output values
          echo ::set-output name=controller_name::$(cat controller_name.txt)
          echo ::set-output name=model_name::$(cat model_name.txt)
          echo ::set-output name=unit_number::$(cat unit_number.txt)
      - name: Install microk8s
        run: |
          sudo snap install microk8s --classic
          sudo microk8s status --wait-ready
          sudo microk8s.enable dns hostpath-storage
          sudo microk8s kubectl -n kube-system rollout status -w deployment/hostpath-provisioner
      - name: Enable microk8s registry
        run: |
          sudo microk8s.enable registry
          sudo microk8s kubectl -n container-registry rollout status -w deployment/registry
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Push jenkins-agent image to microk8s registry
        run: |
          imageId=$(docker load --input jenkins-agent-image/jenkins-agent-image.tar | sed -e "s/^Loaded image ID: //")
          docker tag $imageId localhost:32000/jenkins-agent:latest
          docker push localhost:32000/jenkins-agent:latest
      - name: Add microk8s as a cloud
        run: |
          juju add-k8s micro --controller ${{ steps.jenkins.outputs.controller_name }}
      # [20220824] charmed-kubernetes/actions-operator@main does not work on
      # ubuntu-22.04, but charm runs on 22.04 which has Python 3.10, hence
      # installing Python 3.10 here
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Run integration tests
        run: tox -e integration -- --jenkins-agent-image localhost:32000/jenkins-agent:latest --jenkins-controller-name ${{ steps.jenkins.outputs.controller_name }} "--jenkins-model-name ${{ steps.jenkins.outputs.model_name }} --jenkins-unit-number ${{ steps.jenkins.outputs.unit_number }} --cloud microk8s
      - name: Dump logs
        uses: canonical/charm-logdump-action@main
        if: failure()
        with:
          app: indico
          model: testing
